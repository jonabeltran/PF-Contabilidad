
package Contabilidad;

import Administracion.*;
import Login.coneccionBD;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;



public class misCuentas extends javax.swing.JInternalFrame {

    /**
     * Creates new form misCuentas
     */
    public misCuentas() {
        initComponents();
        
        metodos=new metodosTabla();
        
        mod2=metodos.dameModelo("plan_cuentas");
        
        jTable1.setModel(mod2);
        
        tablamodel=new DefaultTableModel(null, getColumnas());
        setfilas();
        jTable1.setModel(tablamodel);
        
        jRadioButton1.setSelected(true);
        jRadioButton2.setSelected(false);
        jButton4.setVisible(false);
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imputa = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setTitle("Plan de Cuentas");

        jLabel1.setText("Codigo de Cuenta");

        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel2.setText("Descripcion");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton1.setText("Alta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Baja");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Modificar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        imputa.add(jRadioButton1);
        jRadioButton1.setText("Imputable");

        imputa.add(jRadioButton2);
        jRadioButton2.setText("No Imputable");

        jButton4.setText("Guardar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel3.setText("Tipo");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jButton5.setText("Limpiar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(jLabel8))
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel3))
                                        .addGap(36, 36, 36)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addComponent(jRadioButton1)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jRadioButton2))
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(59, 59, 59)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2)
                            .addComponent(jLabel3))
                        .addGap(99, 99, 99)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Carga de Cuentas", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
         if ( jTable1.getSelectedRow()!= -1){
          
                
                int fila=jTable1.getSelectedRow();
                 //System.out.println("fila "+String.valueOf(fila));

               String nrocuenta=jTable1.getValueAt(fila, 2).toString();
               String codcuenta=jTable1.getValueAt(fila, 0).toString();
        
        try{
            coneccionBD connn=new coneccionBD();
            
          
                            imput=imp();
                           String valores="descripcion = '"+jTextField2.getText()+"' , imputa = "+imput+" , codigo_cta = '"+jTextField1.getText()+"'";
                            //lleno valores
                                System.out.println(valores);
                            boolean ress= connn.actualizaRegistro(valores, nrocuenta, "plan_cuentas" , "nro_cuenta");
                           //boolean ress=true;
                            if(ress){

                                JOptionPane.showMessageDialog(null, "Cuenta "+nrocuenta+" modificada");

                                limpio_inputs();

                                limpiartabla(tablamodel);
                                tablamodel=new DefaultTableModel(null, getColumnas());
                                setfilas();
                                jTable1.setModel(tablamodel);

                                jTextField1.setEnabled(true);
                                jButton3.setEnabled(true);
                                jButton4.setVisible(false);
                            }
                        
                
                        }catch(Exception e){

                            JOptionPane.showMessageDialog(null, "Error!");

                        }
                    
                
         }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if ( jTable1.getSelectedRow()!= -1){
          
                
                int fila=jTable1.getSelectedRow();
                 //System.out.println("fila "+String.valueOf(fila));

               String nrocuenta=jTable1.getValueAt(fila, 2).toString();
               String codcuenta=jTable1.getValueAt(fila, 0).toString();
               
               
               

            try{

                coneccionBD connn=new coneccionBD();
                
                
                ResultSet cuenta=connn.registroTabla2("plan_cuentas", "nro_cuenta",nrocuenta);
                while (cuenta.next()){
                    jTextField2.setText(cuenta.getString("descripcion"));
                    jTextField1.setText(cuenta.getString("codigo_cta"));
                    int imputable=cuenta.getInt("imputa");
                    if(imputable==1){
                        jRadioButton1.setSelected(true);
                        jRadioButton2.setSelected(false);
                    }else{
                        jRadioButton1.setSelected(false);
                        jRadioButton2.setSelected(true);
                    }
                    jButton4.setVisible(true);

                }
                
                boolean hijos= connn.tiene_hijos(codcuenta);
                boolean asientos=connn.tiene_asientos(nrocuenta);
                if (hijos || asientos){
                        jRadioButton1.setEnabled(false);
                        jRadioButton2.setEnabled(false);
                        jTextField1.setEnabled(false);
                }

            }catch(Exception e){
               e.printStackTrace();
            }

        }else{
            JOptionPane.showMessageDialog(null, "Seleccione una cuenta de la tabla!");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         if ( jTable1.getSelectedRow()!= -1){
          
                
                int fila=jTable1.getSelectedRow();
                 //System.out.println("fila "+String.valueOf(fila));

               String nrocuenta=jTable1.getValueAt(fila, 2).toString();
               String codcuenta=jTable1.getValueAt(fila, 0).toString();
       
            try{
                coneccionBD connn=new coneccionBD();
                boolean hijos= connn.tiene_hijos(codcuenta);
                boolean asientos=connn.tiene_asientos(nrocuenta);
                if (hijos || asientos){
                    if (hijos){
                        JOptionPane.showMessageDialog(null, "La cuenta tiene hijos, no es posible eliminar");
                    }else{
                        if(asientos){
                        JOptionPane.showMessageDialog(null, "La cuenta tiene asientos cargados, no es posible eliminar");
                        }
                    }
                        /*int resp = JOptionPane.showConfirmDialog(null, "La cuenta tiene hijos, ¿Está seguro?");
                        if (resp ==0){


                            boolean ress= connn.eliminaRegistro2("plan_cuentas", nrocuenta, "nro_cuenta");
                            if(ress){
                                JOptionPane.showMessageDialog(null, "Cuenta "+nrocuenta+" eliminada");

                                limpiartabla(tablamodel);
                                tablamodel=new DefaultTableModel(null, getColumnas());
                                setfilas();
                                jTable1.setModel(tablamodel);
                                limpio_inputs();
                            }
                        }*/
                }else{
                            boolean ress= connn.eliminaRegistro2("plan_cuentas", nrocuenta, "nro_cuenta");
                            if(ress){
                                JOptionPane.showMessageDialog(null, "Cuenta "+nrocuenta+" eliminada");

                                limpiartabla(tablamodel);
                                tablamodel=new DefaultTableModel(null, getColumnas());
                                setfilas();
                                jTable1.setModel(tablamodel);
                                limpio_inputs();
                            }
                }
            }catch(Exception e){

                JOptionPane.showMessageDialog(null, "Error!");

            }
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione una cuenta de la tabla");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        String cuenta_completa= jTextField1.getText();
        String descripcion= jTextField2.getText();

        char[] arrayChar = cuenta_completa.toCharArray();
        int nivel=1;
        for(int i=0; i<arrayChar.length; i++){

            if( arrayChar[i] == '.'){
                nivel=nivel+1;
            }

        }

        metodos=new metodosTabla();

        boolean existe=metodos.repetido(cuenta_completa, "plan_cuentas");

        if(existe==true){

            JOptionPane.showMessageDialog(null, "el codigo ya existe");

        }else if(jTextField1.getText().equals("") || jTextField2.getText().equals("")){

            JOptionPane.showMessageDialog(null, "Existen campos vacios");

        }
        else{
            boolean tiene_padre=tienepadre(cuenta_completa);
            if(tiene_padre){
                String padre= busco_padre(cuenta_completa);
                
                boolean existepadre=metodos.repetido(padre, "plan_cuentas");
                if(existepadre){
                    boolean estitulo=es_titulo2(padre);
                    if(estitulo){
                            imput=imp();
                
                            instruccionSQL="insert into plan_cuentas (codigo_cta, descripcion, nivel, imputa) values('"+cuenta_completa+"','"+descripcion+"','"+nivel+"','"+imput+"')";

                            miConexion=new coneccionBD();

                            miSentencia=miConexion.dameSentencia();

                            try{

                                miSentencia.executeUpdate(instruccionSQL);
                                JOptionPane.showMessageDialog(null, "Cuenta insertada");
                                limpiartabla(tablamodel);
                                tablamodel=new DefaultTableModel(null, getColumnas());
                                setfilas();
                                jTable1.setModel(tablamodel);

                                limpio_inputs();

                            }catch(Exception e){

                                e.printStackTrace();

                            }
                    }else{
                       JOptionPane.showMessageDialog(null, "La cuenta padre es imputable"); 
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "La cuenta padre no existe");
                }
            }else{
                    imput=imp();
                
                    instruccionSQL="insert into plan_cuentas (codigo_cta, descripcion, nivel, imputa) values('"+cuenta_completa+"','"+descripcion+"','"+nivel+"','"+imput+"')";

                    miConexion=new coneccionBD();

                    miSentencia=miConexion.dameSentencia();

                    try{

                        miSentencia.executeUpdate(instruccionSQL);
                        JOptionPane.showMessageDialog(null, "Cuenta insertada");
                         limpiartabla(tablamodel);
                        tablamodel=new DefaultTableModel(null, getColumnas());
                        setfilas();
                        jTable1.setModel(tablamodel);

                        limpio_inputs();

                    }catch(Exception e){

                        e.printStackTrace();

                    }
            }
            
            

        }

       

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
       /* char caracter=evt.getKeyChar();

        if (caracter<'0' || caracter>'9' || jTextField1.getText().length()>=2) {
            evt.consume();

        }*/
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost

    }//GEN-LAST:event_jTextField1FocusLost

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jRadioButton1.setEnabled(true);
        jRadioButton2.setEnabled(true);
        jTextField1.setEnabled(true);
        jTextField1.setText(null);
        jTextField2.setText(null);
        jButton4.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private int imp(){
        int imputable=0;
        if(jRadioButton1.isSelected()){
            imputable=1;
        }else if(jRadioButton2.isSelected()){
            imputable=0;
        }
        return imputable;
    
    }
    private boolean es_titulo2(String padre){
            boolean ress=false;
            try{
                coneccionBD connn=new coneccionBD();
                ress= connn.es_titulo(padre);
                
            }catch(Exception e){

                JOptionPane.showMessageDialog(null, "Error!");

            }
        return ress;
        
    }
    private boolean tienepadre(String cadena){
        int intIndex = cadena.indexOf(".");
       if(intIndex >0){
           return true;
       }else{
           return false;
       }
        
    }
    private String busco_padre(String cuenta){
            String delimiter = "\\.";
            String[] temp;
            temp = cuenta.split(delimiter);
            String padre=null;


            for(int i =0; i < temp.length-1 ; i++){
                if(i==0){
                    padre=temp[i];
                }else{
                    padre=padre+"."+temp[i];
                }

            }
            return padre;
    }
    
    private void limpio_inputs(){
        jTextField1.setText(null);
        jTextField2.setText(null);
    }
   
    
    private void limpiartabla(DefaultTableModel modelo){
    while(modelo.getRowCount()>0)modelo.removeRow(0);
    }
     
    private String[] getColumnas(){
    String columna[]= new String[]{"Codigo","Descripcion","Nro cuenta","nivel","imputa"};
    return columna;
    }
    
    private void setfilas(){
    
       try{
           coneccionBD connn=new coneccionBD();
       
           ResultSet res=connn.listar_cuentas("plan_cuentas");
           Object datos[]=new Object[5];
       while (res.next()) {
           
           for (int i=0;i<5;i++){
               datos[i]=res.getObject(i+1);
           }
                 /*   System.out.println(""+res.getInt("idproducto")+"       "+res.getString("prod_descripcion"));
                   String nombre= res.getString("prod_descripcion");
                   int idd =res.getInt("idproducto");*/
                   
                   
                    tablamodel.addRow(datos);
                }
       }catch(SQLException e){
           System.out.println("fallo");
	   e.printStackTrace();
       }
    }
    
    public DefaultTableModel tablamodel,mod2;
    private Statement miSentencia;
    private coneccionBD miConexion;
    private int imput;
    private String instruccionSQL;
    private metodosTabla metodos;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.ButtonGroup imputa;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
